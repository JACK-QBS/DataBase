一、表的约束：
1、约束类型：
① NOT NULL - 指示某列不能存储 NULL 值。
② UNIQUE - 保证某列的每行必须有唯一的值。
③ DEFAULT - 规定没有给列赋值时的默认值。
④ PRIMARY KEY - NOT NULL 和 UNIQUE 的结合。确保某列（或两个列多个列的结合）有唯一标识，有助于更容易更快速地找到表中的一个特定的记录。
⑤ FOREIGN KEY - 保证一个表中的数据匹配另一个表中的值的参照完整性。
⑥ CHECK - 保证列中的值符合指定的条件。对于MySQL数据库，对CHECK子句进行分析，但是忽略CHECK子句

2、Null 约束：
创建表时，可以指定某列不为空：

drop table if exists student; -- 如果有 student 这个表则删除
create table student (
    id int not null
);

3、Unique： 唯一约束
指定 sn 列为唯一的、不重复的：

drop table if exists student;-- 如果有 student 这个表则删除
create table student (
    id int not null,
    sn int unique
);

4、Default ：默认值约束
指定插入数据时，name 列为空，默认值unkown：

drop table if exists student;-- 如果有 student 这个表则删除
create table student (
    id int not null,
    sn int unique，
    name varchar(20) default 'unkown'
);

5、Primary key ：主键约束
指定 id 列为主键：

drop table if exists student;-- 如果有 student 这个表则删除
create table student (
    id int not null primary key,
    sn int unique，
    name varchar(20) default 'unkown'
);

对于整数类型的主键，常配搭自增长 auto_increment 来使用。插入数据对应字段不给值时，使用最大值+1

-- 主键是 NOT NULL 和 UNIQUE 的结合，可以不用 NOT NULL
id INT PRIMARY KEY auto_increment,

6、Foreign key ：外键约束
外键用于关联其他表的 主键 或 唯一键

创建一个班级表 classes ，id 为主键

-- 使用 MySQL 关键字作为字段时，需要使用 '' 来标识
DROP TABLE IF EXISTS classes;
CREATE TABLE classes (
    id INT PRIMARY KEY auto_increment,
    name VARCHAR(20),
    `desc` VARCHAR(100)
);

创建学生表student，一个学生对应一个班级，一个班级对应多个学生。使用id为主键，
classes_id为外键，关联班级表id

-- 重新设置学生表结构
DROP TABLE IF EXISTS student;
CREATE TABLE student (
    id INT PRIMARY KEY auto_increment,
    sn INT UNIQUE,
    name VARCHAR(20) DEFAULT 'unkown',

    classes_id int,
    FOREIGN KEY (classes_id) REFERENCES classes(id)
);

7、Check 约束：
MySQL使用时不报错，但忽略该约束：

drop table if exists test_user;
create table test_user (
   id int,
   name varchar(20),
   sex varchar(1),
   check (sex ='男' or sex='女')
);